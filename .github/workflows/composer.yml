name: PHP Composer

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs: 
  deploy:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    
    - uses: actions/setup-node@v3
      with:
        node-version: 16.13.2

    - name: Setup PHP with composer v2.
      uses: shivammathur/setup-php@v2
      with:
        php-version: 8.2
        tools: composer:v2
      env:
        COMPOSER_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Get Composer Cache Directory.
      id: composer-cache
      run: |
        echo "dir=$(composer config cache-files-dir)" >> $GITHUB_OUTPUT
      shell: bash

    - name: Cache composer packages.
      uses: actions/cache@v3
      with:
        path: ${{ steps.composer-cache.outputs.dir }}
        key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
        restore-keys: |
          ${{ runner.os }}-composer-

    - name: Cache node modules.
      uses: actions/cache@v3
      with:
        path: ~/.npm
        key: ${{ runner.os }}-npm-${{ hashFiles('**/package.json') }}
        restore-keys: |
          ${{ runner.os }}-npm-

    - name: Validate composer.json and composer.lock.
      run: composer validate
      shell: bash

    - name: Inject access token in .npmrc.
      run: | 
        echo "@helsingborg-stad:registry=https://npm.pkg.github.com/helsingborg-stad" >> ~/.npmrc
        echo "//npm.pkg.github.com/:_authToken=${{ secrets.GITHUB_TOKEN }}" >> ~/.npmrc
      shell: bash

    - name: Execute buildscript
      run: php ./build.php --cleanup
      shell: bash
      
    - name: Cleanup .npmrc
      run: rm ~/.npmrc
      shell: bash

    - name: The rsync deployment
      uses: burnett01/rsync-deployments@4.1
      with:
        switches: -avzrog --delete --backup --backup-dir=${{ secrets.DEPLOY_REMOTE_BACKUP_DIR_PROD }}/$GITHUB_SHA --chown=${{ secrets.WEB_SERVER_USER_PROD }}:${{ secrets.WEB_SERVER_USER_PROD }} --exclude storage/app 
        path: .
        remote_path: ${{ secrets.DEPLOY_REMOTE_PATH_PROD  }}
        remote_host: ${{ secrets.DEPLOY_REMOTE_HOST_PROD }}
        remote_user: ${{ secrets.DEPLOY_REMOTE_USER_PROD }}
        remote_key: ${{ secrets.DEPLOY_KEY_PROD }}
        remote_port: ${{ secrets.DEPLOY_REMOTE_PORT_PROD }}
      
    - name: Compress backup files.
      uses: appleboy/ssh-action@v0.1.4
      with:
        script: tar --remove-files -zcf ${{ secrets.DEPLOY_REMOTE_BACKUP_DIR_PROD }}/${{ github.sha }}.tar.gz -C ${{ secrets.DEPLOY_REMOTE_BACKUP_DIR_PROD }} ${{ github.sha }}
        host: ${{ secrets.DEPLOY_REMOTE_HOST_PROD }}
        username: ${{ secrets.DEPLOY_REMOTE_USER_PROD }}
        key: ${{ secrets.DEPLOY_KEY_PROD }}
        port: ${{ secrets.DEPLOY_REMOTE_PORT_PROD }}

    - name: Delete backups older than 7 days.
      uses: appleboy/ssh-action@v0.1.4
      with:
        script: find ${{ secrets.DEPLOY_REMOTE_BACKUP_DIR_PROD }} -type f -mtime +7 -name '*.tar.gz' -delete
        host: ${{ secrets.DEPLOY_REMOTE_HOST_PROD }}
        username: ${{ secrets.DEPLOY_REMOTE_USER_PROD }}
        key: ${{ secrets.DEPLOY_KEY_PROD }}
        port: ${{ secrets.DEPLOY_REMOTE_PORT_PROD }}

    - name: Set file permissions.
      uses: appleboy/ssh-action@v0.1.4
      with:
        script: find ${{ secrets.DEPLOY_REMOTE_PATH_PROD  }} -path ${{ secrets.DEPLOY_REMOTE_PATH_PROD  }}/wp-content/uploads -prune -o ! -type l -exec chmod g+rw {} +
        host: ${{ secrets.DEPLOY_REMOTE_HOST_PROD }}
        username: ${{ secrets.DEPLOY_REMOTE_USER_PROD }}
        key: ${{ secrets.DEPLOY_KEY_PROD }}
        port: ${{ secrets.DEPLOY_REMOTE_PORT_PROD }}